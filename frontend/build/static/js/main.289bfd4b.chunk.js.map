{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Rating.js","components/Product.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","height","width","margin","display","Message","children","Alert","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","console","log","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCard","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","setSdkReady","successPay","loadingDeliver","successDeliver","window","iyzico","script","document","createElement","async","onload","body","appendChild","addIyzicoScript","href","isDelivered","DeliveredAt","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","deliveredAt","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.289bfd4b.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { \r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    \r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    \r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart:{\r\n        cartItems : cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware= [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store    ","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n } from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading:true, products:[]}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false,\r\n                products:action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = {product: {reviews:[]}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading:true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading:false, product:action.payload}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading:false, success:true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return {loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {product:{}}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading:true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return {loading:false, success:true,}\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading:true, products:[]}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {loading:false, products:action.payload,}\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return {loading:false, error:action.payload}       \r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress: {}}, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x=>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n            \r\n                    \r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems:[],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n    \r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}          \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading:false, userInfo: action.payload}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false, error:action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}          \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading:true}\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading:false, user: action.payload}\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false, error:action.payload}  \r\n\r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}   \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false, success:true , userInfo: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false, error:action.payload}     \r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false, users: action.payload}\r\n\r\n        case USER_LIST_FAIL:\r\n            return {loading:false, error:action.payload}     \r\n\r\n        case USER_LIST_RESET:\r\n            return {users:[]}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false, success: true}\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false, error:action.payload}    \r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true}\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading:false, success: true}\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false, error:action.payload}    \r\n        \r\n        case USER_UPDATE_REQUEST:\r\n            return {user:{}}\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET, \r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state ={}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success:true,\r\n                order: action.payload\r\n        }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return{}\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const orderDetailsReducer = (state ={loading:true, orderItems:[], shippingAddress:{}}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                order: action.payload\r\n        }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const orderPayReducer = (state ={}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success: true,\r\n        }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n        case ORDER_PAY_RESET:\r\n            return{}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const orderDeliverReducer = (state ={}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                success: true,\r\n        }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n        case ORDER_DELIVER_RESET:\r\n            return{}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const orderListMyReducer = (state ={orders:[]}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                orders: action.payload,\r\n        }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n        case ORDER_LIST_MY_RESET:\r\n            return{\r\n                orders:[]\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   \r\n\r\nexport const orderListReducer = (state ={orders:[]}, action)=>{\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading:true\r\n            }\r\n    \r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                orders: action.payload,\r\n        }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n                loading:false,\r\n                error: action.payload,\r\n        }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}   ","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction SearchBox() {\r\n    const[keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit = {submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,    \r\n    \r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login/',\r\n            {'username':email, 'password':password},\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n    dispatch({type:USER_DETAILS_RESET})\r\n    dispatch({type:ORDER_LIST_MY_RESET})\r\n    dispatch({type:USER_LIST_RESET})\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n            )\r\n\r\n            dispatch({\r\n                type: USER_DETAILS_SUCCESS,\r\n                payload:data\r\n            })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            }\r\n\r\n        } \r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            {'name': name, 'email':email, 'password':password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n        dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload:data\r\n        })\r\n            \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: USER_UPDATE_PROFILE_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n        dispatch({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload:data\r\n        })\r\n            \r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: USER_LIST_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: USER_DELETE_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)  \r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const logoutHandler= () =>{\r\n      dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                  \r\n                  <LinkContainer to ='/'>\r\n  <Navbar.Brand>Bidle.com</Navbar.Brand>\r\n  </LinkContainer>\r\n\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <SearchBox/>\r\n    <Nav className=\"ml-auto\">\r\n\r\n      <LinkContainer to ='/cart'>\r\n        <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n      </LinkContainer>\r\n\r\n      {userInfo ?(\r\n        <NavDropdown title={userInfo.name} id='username'>\r\n          <LinkContainer to='/profile'>\r\n            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n          </LinkContainer>\r\n\r\n          <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n        </NavDropdown>\r\n      ):(\r\n          <LinkContainer to =\"/login\">\r\n            <Nav.Link ><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n          </LinkContainer>\r\n      )}\r\n\r\n      {userInfo && userInfo.isAdmin && (\r\n        <NavDropdown title='Admin' id='adminmenu'>\r\n          <LinkContainer to='/admin/userlist'>\r\n            <NavDropdown.Item>Users</NavDropdown.Item>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to='/admin/productlist'>\r\n            <NavDropdown.Item>Products</NavDropdown.Item>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to='/admin/orderlist'>\r\n            <NavDropdown.Item>Orders</NavDropdown.Item>\r\n          </LinkContainer>\r\n\r\n        </NavDropdown>\r\n      )}\r\n      \r\n    </Nav>\r\n    \r\n  </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nfunction Footer() {\r\n    return (\r\n        \r\n            <footer>\r\n<Container>\r\n    <Row>\r\n        <Col className=\"text-center py-3\" >Copyright &copy; Bidle.com</Col>\r\n    </Row>\r\n</Container>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n        animation = 'border'\r\n        role = 'status'\r\n        style= {{\r\n            height:'100px',\r\n            width:'100px',\r\n            margin :'auto',\r\n            display : 'block'\r\n        }}\r\n        >\r\n            <span className='sr-only' >Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=1\r\n                    ? 'fas fa-star'\r\n                    : value >=0.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=2\r\n                    ? 'fas fa-star'\r\n                    : value >=1.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=3\r\n                    ? 'fas fa-star'\r\n                    : value >=2.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=4\r\n                    ? 'fas fa-star'\r\n                    : value >=3.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >=5\r\n                    ? 'fas fa-star'\r\n                    : value >=4.5\r\n                    ?'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                {text && text }\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nfunction Product({product}) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as=\"div\">\r\n                    <strong>{product.name} </strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as=\"div\">\r\n            <div className= \"my-3\">\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n            </div>\r\n            </Card.Text>\r\n\r\n            <Card.Text as=\"h3\">\r\n                ${product.price}\r\n            </Card.Text>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='',isAdmin=false}) {\r\n\r\n    if(keyword){\r\n        keyword=keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 &&(\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x)=>(\r\n                <LinkContainer \r\n                    key={x+1}\r\n                    to={!isAdmin ? \r\n                        `/?keyword=${keyword}&page=${x+1}`\r\n                        :`/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n        \r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    \r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n        try{\r\n\r\n            dispatch({type:PRODUCT_LIST_REQUEST})\r\n\r\n            const {data} = await axios.get(`/api/products${keyword}`)\r\n            \r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n\r\n        }catch(error){\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n            })\r\n        }\r\n}\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/top/`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: PRODUCT_CREATE_SUCCESS,\r\n                payload: data,\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: PRODUCT_UPDATE_SUCCESS,\r\n                payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n                payload: data,\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\nimport { productTopRatedReducer } from '../reducers/productReducers'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated= useSelector(state => state.productTopRated)\r\n    const {error, loading, products}=productTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTopProducts())\r\n    },[dispatch])\r\n    return (\r\n        loading ? <Loader/>\r\n        :error\r\n        ? <Message variant='danger'>{error}</Message>\r\n        :(\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {products.map(product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid/>\r\n                            <Carousel.Caption className='carousel.caption'>\r\n                                <h4>{product.name} (${product.price})</h4>\r\n                                \r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction HomeScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    let keyword = history.location.search\r\n    console.log(keyword)\r\n    useEffect(()=> {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n    \r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/> }\r\n            \r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                :error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n\r\n\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n        }\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_SUCCESS } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({match, history}) {\r\n    const[qty,setQty] = useState(1)\r\n    const[rating,setRating] = useState(0)\r\n    const[comment,setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading:loadingProductReview,\r\n        error:errorProductReview,\r\n        success:successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(()=> {\r\n        if(successProductReview){\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n    \r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id,{\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n              {loading ?\r\n                <Loader/>\r\n                :error \r\n                    ? <Message variant = 'danger'>{error}</Message>\r\n                    :(\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid/>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                    <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                    {product.countInStock>0 ? 'In Stock': 'Out of Stock' }\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            {product.countInStock>0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                            as=\"select\"\r\n                                                            value={qty}\r\n                                                            onChange = {(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) =>(\r\n                                                                        <option key={x+1} value= {x+1}>\r\n                                                                            {x+1}\r\n                                                                        </option>\r\n\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ) }\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                onClick = {addToCartHandler}\r\n                                                className='btn-block'\r\n                                                disabled={product.countInStock === 0} \r\n                                                type='button'>\r\n                                                Add To Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md= {6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) =>(\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color ='#f8e825'/>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader/>}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e)=>setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e)=> setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n              }\r\n\r\n             \r\n        </div>\r\n           \r\n     \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id,qty) => async (dispatch,getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product:data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCard = (id) =>(dispatch,getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id, \r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) =>(dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data, \r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) =>(dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data, \r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCard } from '../actions/cartActions'\r\n\r\n\r\nfunction CartScreen({match, location, history}) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n    console.log('cartItems:', cartItems)\r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n\r\n\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCard(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md= {8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key = {item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src = {item.image} alt = {item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to = {`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    \r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                    <Form.Control\r\n                                            as=\"select\"\r\n                                            value={item.qty}\r\n                                            onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map((x) =>(\r\n                                                        <option key={x+1} value= {x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n            <Col md= {4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item)=>acc+item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc+item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled = {cartItems.length === 0 }\r\n                            onClick = {checkoutHandler}\r\n                        \r\n                        >\r\n                            Proceed To Checkout\r\n\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}> \r\n                    {children}\r\n                </Col>\r\n            </Row>   \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : ('/')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                            to = {redirect ? `/register?redirect =${redirect}`:'/register'}>\r\n                            Register\r\n                            </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location,history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : ('/')\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>} \r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>\r\n                      Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                            to = {redirect ? `/login?redirect =${redirect}`:'/login'}>\r\n                            Sign In\r\n                            </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const {loading: loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name ||success || userInfo._id !== user._id){\r\n                dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({\r\n                'id':user._id,\r\n                'name':name,\r\n                'email':email,\r\n                'password':password\r\n        \r\n            }))\r\n        setMessage('Passwords do not match')\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>} \r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit ={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>\r\n                      Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ): errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ): (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0,10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                        <i className='fas fa-times' style ={{color: 'red'}} ></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to ={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\n\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n     \r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_CREATE_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload:data\r\n    })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_DETAILS_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_PAY_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_DELIVER_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_LIST_MY_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n                type: ORDER_LIST_SUCCESS,\r\n                payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction CheckoutSteps(step1, step2, step3, step4) {\r\n    return (\r\n        <Nav className = 'justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to = '/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to = '/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to = '/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to = '/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler =(e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >   \r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history}) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n                            \r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const{order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price*item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice >100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((cart.itemsPrice)*(0.08)).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = ()=>{\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems, \r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md ={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country},\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item,index)=>(\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                                \r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type= 'button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  } from 'module'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({match, history}) {\r\n\r\n    const orderId=match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const[sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const{order, error, loading} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const{loading:loadingPay,success:successPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const{loading:loadingDeliver,success:successDeliver} = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const{userInfo} = userLogin\r\n    \r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price*item.qty, 0).toFixed(2)\r\n    }\r\n    \r\n\r\n    const addIyzicoScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type ='text/javascript'\r\n        script.src = ''\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.iyzico){\r\n                addIyzicoScript()\r\n            }else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n       \r\n    }, [dispatch,order, orderId, successPay,successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) =>{\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n\r\n    ): error ?(\r\n        <Message variant='danger'>{error}</Message>\r\n    ):(\r\n\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md ={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name:</strong>{order.user.name}</p>\r\n                            <p><strong>E-mail:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                \r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress}, {order.shippingAddress},\r\n                                {'  '}\r\n                                {order.shippingAddress},\r\n                                {'  '}\r\n                                {order.shippingAddress},\r\n                                \r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered on {order.DeliveredAt}</Message>\r\n                            ) : (\r\n                                    <Message variant='warning'>Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                    <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item,index)=>(\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered &&(\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark as Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state =>state.userList)\r\n    const {loading, error, users} =userList\r\n\r\n    const userLogin = useSelector(state =>state.userLogin)\r\n    const {userInfo} =userLogin\r\n\r\n    const userDelete = useSelector(state =>state.userDelete)\r\n    const {success: successDelete} =userDelete\r\n\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n\r\n    const deleteHandler =(id) => {\r\n\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <h1>Users</h1> \r\n          {loading\r\n            ? (<Loader/>)\r\n            :error\r\n                ?(<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isAdmin ?( \r\n                                        <i className='fas fa-check 'style={{color:'green'}}></i>\r\n                                ) :(\r\n                                        <i className='fas fa-check 'style={{color:'red'}}></i>\r\n                                    )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit '></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash '></i>\r\n                                    </Button>\r\n\r\n                                </td>\r\n                                \r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({match,history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else {\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n        \r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n    return (\r\n        <div>\r\n                <Link to='/admin/userlist'>\r\n                    Go Back\r\n                </Link>\r\n\r\n                <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader/> : error ? <Message variant ='danger'>{error}</Message> \r\n                    : (\r\n                        <Form onSubmit ={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            \r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >   \r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                )}\r\n                \r\n            </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct, listProductDetails } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state =>state.productList)\r\n    const {loading, error, products,pages,page} =productList\r\n\r\n    const productDelete = useSelector(state =>state.productDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} =productDelete\r\n\r\n    const productCreate = useSelector(state =>state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} =productCreate\r\n\r\n    const userLogin = useSelector(state =>state.userLogin)\r\n    const {userInfo} =userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(()=>{\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n            dispatch(listProducts(keyword))\r\n        }\r\n        \r\n    }, [dispatch, history,userInfo, successDelete, successCreate,createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler =(id) => {\r\n\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <Row className='align-items-center'>\r\n              <Col>\r\n                    <h1>Products</h1>\r\n              </Col>\r\n\r\n              <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n              </Col>\r\n\r\n          </Row>\r\n\r\n          {loadingDelete && <Loader/>}\r\n          {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n          {loadingCreate && <Loader/>}\r\n          {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n          {loading\r\n            ? (<Loader/>)\r\n            :error\r\n                ?(<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>${product.price}</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.brand}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit '></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(product._id)}>\r\n                                                <i className='fas fa-trash '></i>\r\n                                            </Button>\r\n\r\n                                        </td>\r\n                                    \r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                    </div>\r\n                )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({match,history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] =useState('')\r\n    const [uploading, setUploading] =useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const {error, loading, product} = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type:PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        }else{\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            }else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n        \r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/',formData,config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n            \r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <Link to='/admin/productlist'>\r\n                    Go Back\r\n                </Link>\r\n\r\n                <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>} \r\n\r\n                {loading ? <Loader/> : error ? <Message variant ='danger'>{error}</Message> \r\n                    : (\r\n                        <Form onSubmit ={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >   \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            \r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                )}\r\n                \r\n            </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state =>state.orderList)\r\n    const {loading, error, orders} =orderList\r\n\r\n    const userLogin = useSelector(state =>state.userLogin)\r\n    const {userInfo} =userLogin\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n          <h1>Orders</h1> \r\n          {loading\r\n            ? (<Loader/>)\r\n            :error\r\n                ?(<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n\r\n                                    <td>{order.isPaid ?( \r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) :(\r\n                                            <i className='fas fa-check 'style={{color:'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n                                    \r\n                                    <td>{order.isDelivered ?( \r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) :(\r\n                                            <i className='fas fa-check 'style={{color:'red'}}></i>\r\n                                        )}\r\n                                    </td>\r\n\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n                                \r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container }  from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\nfunction App() {\n  return (\n    <Router >\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n        <Route path='/'  component={HomeScreen} exact/>\n        <Route path='/login'  component={LoginScreen}/>\n        <Route path='/register'  component={RegisterScreen}/>\n        <Route path='/payment'  component={PaymentScreen}/>\n        <Route path='/shipping'  component={ShippingScreen}/>\n        <Route path='/profile'  component={ProfileScreen}/>\n        <Route path='/placeorder'  component={PlaceOrderScreen}/>\n        <Route path='/order/:id'  component={OrderScreen}/>\n        <Route path='/product/:id'  component={ProductScreen} />\n        <Route path='/cart/:id?'  component={CartScreen} />\n\n        <Route path='/admin/userlist'  component={UserListScreen} />\n        <Route path='/admin/user/:id/edit'  component={UserEditScreen} />\n        \n        <Route path='/admin/productlist'  component={ProductListScreen} />\n        <Route path='/admin/product/:id/edit'  component={ProductEditScreen} />\n\n        <Route path='/admin/orderlist'  component={OrderListScreen} />\n        \n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}